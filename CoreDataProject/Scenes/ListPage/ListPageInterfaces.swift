//
//  ListPageInterfaces.swift
//  CoreDataProject
//
//  Created by Oguz Tandogan on 24.05.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import CoreData
import UIKit

protocol ListPageWireframeInterface: WireframeInterface {
    func navigateToTaskDetails(taskDetails: Tasks)
    func presentTaskAdditionPopup(completion: @escaping (String) -> ())
}

protocol ListPageViewInterface {
    func addTaskToTableView()
    func reloadTableView()
}

protocol ListPagePresenterInterface {
    func viewWillAppear()
    func addButtonAction()
    func getCellData(indexPath: IndexPath) -> String
    func getNumberOfItems() -> Int
    func deleteItemFromData(indexPath: IndexPath)
    func navigateToTaskDetails(indexPath: IndexPath)
}

protocol ListPageFormatterInterface {
    func updateTaskList(taskList: [Tasks])
    func loadTaskName(index: Int) -> String
    func getNumberOfItems() -> Int
    func deleteTask(index: Int)
    func loadDeletedTask(index: Int) -> Tasks
    func addTaskToList(task: Tasks)
    func getSelectedTask(index: Int) -> Tasks
}

protocol ListPageInteractorInterface {
    func createItem(listItem: String, completion: @escaping (NSManagedObject) -> ())
    func fetchItems(completion: @escaping (([Tasks]) -> ()))
    func deleteItem(deletedTask: NSManagedObject)
}
