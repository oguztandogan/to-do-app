//
//  ListPageWireframe.swift
//  CoreDataProject
//
//  Created by Oguz Tandogan on 24.05.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class ListPageWireframe: BaseWireframe {

    // MARK: - Private properties -

    private let storyboard = UIStoryboard(name: "ListPage", bundle: nil)

    // MARK: - Module setup -

    init() {
        let moduleViewController = storyboard.instantiateViewController(ofType: ListPageViewController.self)
        super.init(viewController: moduleViewController)

        let formatter = ListPageFormatter()
        let interactor = ListPageInteractor()
        let presenter = ListPagePresenter(view: moduleViewController, formatter: formatter, interactor: interactor, wireframe: self)
        moduleViewController.presenter = presenter
    }

}

// MARK: - Extensions -

extension ListPageWireframe: ListPageWireframeInterface {
    func navigateToTaskDetails(taskDetails: Tasks) {
        navigationController?.pushWireframe(TaskDetailWireframe(taskDetails: taskDetails))
    }
    
    func presentTaskAdditionPopup(completion: @escaping (String) -> ()) {
        let addPopup = UIAlertController(title: "New Name", message: "Add a new name", preferredStyle: .alert)
        addPopup.addTextField { (textField) in
            guard let textField = addPopup.textFields?.first,
              let nameToSave = textField.text else {
                return
            }
        }
        let saveAction = UIAlertAction(title: "OK", style: .default) { action in
            guard let textField = addPopup.textFields?[0].text,
                  textField.isEmpty == false
            else { return }
            completion(textField)
        }
        addPopup.addAction(saveAction)
        navigationController?.present(addPopup, animated: false, completion: nil)
    }
}
