//
//  ListPageViewController.swift
//  CoreDataProject
//
//  Created by Oguz Tandogan on 24.05.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class ListPageViewController: UIViewController {
    
    @IBOutlet private weak var tableView: UITableView!
    
    // MARK: - Public properties -
    
    var presenter: ListPagePresenterInterface!
        
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        presenter.viewWillAppear()
    }
    
    private func setupTableView() {
        tableView.rowHeight = UITableView.automaticDimension
        tableView.estimatedRowHeight = 100
    }
    
    @IBAction func addButtonTapped(_ sender: Any) {
        presenter.addButtonAction()
    }
    
}

// MARK: - Extensions -

extension ListPageViewController: ListPageViewInterface {
    
    func addTaskToTableView() {
        tableView.performBatchUpdates({
            self.tableView.insertRows(at: [IndexPath(row: presenter.getNumberOfItems() - 1,
                                                     section: 0)],
                                      with: .automatic)
        }, completion: nil)
    }
    
    func reloadTableView() {
        tableView.reloadData()
    }
}

extension ListPageViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return presenter.getNumberOfItems()
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = self.tableView.dequeueReusableCell(withIdentifier: "TodoListTableViewCell", for: indexPath as IndexPath) as? TodoListTableViewCell else {
            fatalError("Cell type is incorrect.")
        }
        cell.todoTask.text = presenter.getCellData(indexPath: indexPath)
        return cell
    }
    
    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            presenter.deleteItemFromData(indexPath: indexPath)
            tableView.deleteRows(at: [indexPath], with: .fade)
        }
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        presenter.navigateToTaskDetails(indexPath: indexPath)
    }
    
    
}
