//
//  TaskDetailPresenter.swift
//  CoreDataProject
//
//  Created by Oguz Tandogan on 24.05.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class TaskDetailPresenter {

    // MARK: - Private properties -

    private let view: TaskDetailViewInterface
    private let formatter: TaskDetailFormatterInterface
    private let interactor: TaskDetailInteractorInterface
    private let wireframe: TaskDetailWireframeInterface
    
    private var taskDetails: Tasks

    // MARK: - Lifecycle -

    init(view: TaskDetailViewInterface, formatter: TaskDetailFormatterInterface, interactor: TaskDetailInteractorInterface, wireframe: TaskDetailWireframeInterface, taskDetails: Tasks) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
        self.taskDetails = taskDetails
    }
    
    private func deleteTaskFromCoreData() {
        interactor.deleteItem(deletedTask: taskDetails) {
            self.wireframe.navigateToTasksList()
        }
    }
    
    private func updateTaskFromCoreData(newTaskName: String, newTaskDetail: String) {
        interactor.updateItem(updatedTask: taskDetails,
                              newTaskName: newTaskName,
                              newTaskDetail: newTaskDetail)
    }
}

// MARK: - Extensions -

extension TaskDetailPresenter: TaskDetailPresenterInterface {
    
    func getTaskName() -> String {
        return taskDetails.taskName ?? ""
    }
    
    func getTaskDetail() -> String {
        return taskDetails.taskDetail ?? ""
    }
    
    func getChangedTaskName(taskName: String, taskDetail: String) {
        updateTaskFromCoreData(newTaskName: taskName, newTaskDetail: taskDetail)
    }
    
    func deleteTask() {
        deleteTaskFromCoreData()
    }
}
